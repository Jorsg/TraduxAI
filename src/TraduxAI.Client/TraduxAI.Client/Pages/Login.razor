@page "/login"
@using TraduxAI.Client.Models
@using TraduxAI.Client.Services
@inject IAuthService AuthService
@inject NavigationManager Navigation

<div class="login-wrapper">
    <div class="login-card shadow">
        <div class="text-center mb-4">
            <img class="profile-img mb-2" src="https://ui-avatars.com/api/?name=AI&background=5a189a&color=fff&size=96" alt="AI Logo" />
            <div class="app-brand fw-bold fs-4 mb-2">Tradux-AI</div>
            <div class="login-title">Inicio de Sesión</div>
        </div>
        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin" class="form-signin">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="mb-3">
                <label class="form-label" for="email">Usuario:</label>
                <InputText id="email" class="form-control" @bind-Value="loginModel.Email" autocomplete="username" />
            </div>
            <div class="mb-3">
                <label class="form-label" for="password">Contraseña:</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" autocomplete="current-password" />
            </div>
            <button type="submit" class="btn btn-primary w-100" disabled="@isProcessing">
                @if (isProcessing)
                {
                    <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                    <span> Iniciando...</span>
                }
                else
                {
                    <span>Entrar</span>
                }
            </button>
        </EditForm>
        <div class="text-center mt-4">
            <span>¿No tienes cuenta?</span>
            <NavLink href="/create-user" class="btn btn-link new-account d-block mt-1" Match="NavLinkMatch.All">
                Crear una nueva cuenta
            </NavLink>
        </div>
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger mt-3 text-center">@errorMessage</div>
        }
    </div>
</div>

@code {
    private LoginRequest loginModel = new();
    private bool isProcessing = false;
    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        isProcessing = true;
        errorMessage = string.Empty;
        try
        {
            var response = await AuthService.LoginAsync(loginModel);
            Navigation.NavigateTo("/", forceLoad: true);
        }
        catch (Exception ex)
        {
            errorMessage = $"Error al iniciar sesión: {ex.Message}";
        }
        finally
        {
            isProcessing = false;
        }
    }
}
