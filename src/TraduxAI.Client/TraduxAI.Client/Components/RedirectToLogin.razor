@inject NavigationManager Navigation
@inject IJSRuntime JS
@inject AuthenticationStateProvider AuthProvider
@using Microsoft.AspNetCore.Components.Authorization


@code {
	private bool shouldRedirect = false;

	protected override async Task OnInitializedAsync()
	{
		var authState = await AuthProvider.GetAuthenticationStateAsync();
		var user = authState.User;

		if (!user.Identity?.IsAuthenticated ?? true)
		{
			var currentUri = Navigation.ToBaseRelativePath(Navigation.Uri).ToLower();

			if (!currentUri.StartsWith("login"))
			{
				// 🔁 Espera a que se complete el prerender y luego redirige
				shouldRedirect = true;
			}
		}
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender && shouldRedirect)
		{
			await JS.InvokeVoidAsync("window.location.replace", "/login");
		}
	}


}
